apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

ext {
  parseVersion = "1.16.7"

  bintrayRepo = 'maven'
  bintrayName = 'parse-kt-extension'
  publishedGroupId = 'com.github.jcdelacueva'
  libraryName = 'ParseKTExtension'
  artifact = 'parsektextension'

  libraryDescription = 'Kotlin Extensions for Parse'
  libraryVersion = '1.0.0'

  developerId = 'jcdelacueva'
  developerName = 'Juan Carlos Dela Cueva'
  developerEmail = 'delacuevajc28@gmail.com'

  siteUrl = 'https://github.com/JcDelaCueva/ParseKTExtension'
  gitUrl = 'https://github.com/JcDelaCueva/ParseKTExtension.git'

  licenseName = 'The Apache Software License, Version 2.0'
  licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
  allLicenses = ["Apache-2.0"]
}

buildscript {
  repositories {
    jcenter()
  }

  dependencies {
    classpath 'com.github.dcendents:android-maven-gradle-plugin:2.0'
    classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7.3'
  }
}

android {
  compileSdkVersion 27

  defaultConfig {
    minSdkVersion 19
    targetSdkVersion 27
    versionCode 1
    versionName libraryVersion

    testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
  }

  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'),
          'proguard-rules.pro'
    }
  }
}

dependencies {
  implementation fileTree(dir: 'libs', include: ['*.jar'])

  implementation 'com.android.support:appcompat-v7:27.1.1'
  testImplementation 'junit:junit:4.12'
  androidTestImplementation 'com.android.support.test:runner:1.0.2'
  androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
  implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
  implementation "com.parse:parse-android:${parseVersion}"
}

repositories {
  mavenCentral()
}

group = publishedGroupId
version = libraryVersion

install {
  repositories.mavenInstaller {
    pom.project {
      packaging 'aar'
      groupId publishedGroupId
      artifactId artifact

      name libraryName
      description libraryDescription
      url siteUrl

      licenses {
        license {
          name licenseName
          url licenseUrl
        }
      }
      developers {
        developer {
          id developerId
          name developerName
          email developerEmail
        }
      }
      scm {
        connection gitUrl
        developerConnection gitUrl
        url siteUrl
      }
    }
  }
}

task sourcesJar(type: Jar) {
  classifier = 'sources'
  from android.sourceSets.main.java.srcDirs
}

task javadoc(type: Javadoc) {
  source = android.sourceSets.main.java.srcDirs
  classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
  classifier = 'javadoc'
  from javadoc.destinationDir
}

artifacts {
  archives javadocJar
  archives sourcesJar
}

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

bintray {
  user = properties.getProperty("bintray.user")
  key = properties.getProperty("bintray.apikey")

  configurations = ['archives']
  pkg {
    repo = bintrayRepo
    name = bintrayName
    desc = libraryDescription
    websiteUrl = siteUrl
    vcsUrl = gitUrl
    licenses = allLicenses
    dryRun = false
    publish = true
    override = false
    publicDownloadNumbers = true
    version {
      desc = libraryDescription
    }
  }
}
